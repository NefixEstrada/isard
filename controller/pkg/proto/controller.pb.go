// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.4
// source: pkg/proto/controller.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Viewer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spice []*Viewer_Spice `protobuf:"bytes,1,rep,name=spice,proto3" json:"spice,omitempty"`
	Vnc   []*Viewer_Vnc   `protobuf:"bytes,2,rep,name=vnc,proto3" json:"vnc,omitempty"`
}

func (x *Viewer) Reset() {
	*x = Viewer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_controller_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Viewer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Viewer) ProtoMessage() {}

func (x *Viewer) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_controller_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Viewer.ProtoReflect.Descriptor instead.
func (*Viewer) Descriptor() ([]byte, []int) {
	return file_pkg_proto_controller_proto_rawDescGZIP(), []int{0}
}

func (x *Viewer) GetSpice() []*Viewer_Spice {
	if x != nil {
		return x.Spice
	}
	return nil
}

func (x *Viewer) GetVnc() []*Viewer_Vnc {
	if x != nil {
		return x.Vnc
	}
	return nil
}

type DesktopListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DesktopListRequest) Reset() {
	*x = DesktopListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_controller_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DesktopListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopListRequest) ProtoMessage() {}

func (x *DesktopListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_controller_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopListRequest.ProtoReflect.Descriptor instead.
func (*DesktopListRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_controller_proto_rawDescGZIP(), []int{1}
}

type DesktopListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DesktopListResponse) Reset() {
	*x = DesktopListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_controller_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DesktopListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopListResponse) ProtoMessage() {}

func (x *DesktopListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_controller_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopListResponse.ProtoReflect.Descriptor instead.
func (*DesktopListResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_controller_proto_rawDescGZIP(), []int{2}
}

type DesktopStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DesktopStartRequest) Reset() {
	*x = DesktopStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_controller_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DesktopStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopStartRequest) ProtoMessage() {}

func (x *DesktopStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_controller_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopStartRequest.ProtoReflect.Descriptor instead.
func (*DesktopStartRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_controller_proto_rawDescGZIP(), []int{3}
}

func (x *DesktopStartRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DesktopStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Viewer *Viewer `protobuf:"bytes,1,opt,name=viewer,proto3" json:"viewer,omitempty"`
}

func (x *DesktopStartResponse) Reset() {
	*x = DesktopStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_controller_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DesktopStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopStartResponse) ProtoMessage() {}

func (x *DesktopStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_controller_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopStartResponse.ProtoReflect.Descriptor instead.
func (*DesktopStartResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_controller_proto_rawDescGZIP(), []int{4}
}

func (x *DesktopStartResponse) GetViewer() *Viewer {
	if x != nil {
		return x.Viewer
	}
	return nil
}

type DesktopStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DesktopStopRequest) Reset() {
	*x = DesktopStopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_controller_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DesktopStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopStopRequest) ProtoMessage() {}

func (x *DesktopStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_controller_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopStopRequest.ProtoReflect.Descriptor instead.
func (*DesktopStopRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_controller_proto_rawDescGZIP(), []int{5}
}

func (x *DesktopStopRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DesktopStopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DesktopStopResponse) Reset() {
	*x = DesktopStopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_controller_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DesktopStopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopStopResponse) ProtoMessage() {}

func (x *DesktopStopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_controller_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopStopResponse.ProtoReflect.Descriptor instead.
func (*DesktopStopResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_controller_proto_rawDescGZIP(), []int{6}
}

type ViewerGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ViewerGetRequest) Reset() {
	*x = ViewerGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_controller_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewerGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewerGetRequest) ProtoMessage() {}

func (x *ViewerGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_controller_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewerGetRequest.ProtoReflect.Descriptor instead.
func (*ViewerGetRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_controller_proto_rawDescGZIP(), []int{7}
}

func (x *ViewerGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ViewerGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Viewer *Viewer `protobuf:"bytes,1,opt,name=viewer,proto3" json:"viewer,omitempty"`
}

func (x *ViewerGetResponse) Reset() {
	*x = ViewerGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_controller_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewerGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewerGetResponse) ProtoMessage() {}

func (x *ViewerGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_controller_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewerGetResponse.ProtoReflect.Descriptor instead.
func (*ViewerGetResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_controller_proto_rawDescGZIP(), []int{8}
}

func (x *ViewerGetResponse) GetViewer() *Viewer {
	if x != nil {
		return x.Viewer
	}
	return nil
}

type Viewer_Spice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pwd     string `protobuf:"bytes,1,opt,name=pwd,proto3" json:"pwd,omitempty"`
	Port    int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	TlsPort int32  `protobuf:"varint,3,opt,name=tls_port,json=tlsPort,proto3" json:"tls_port,omitempty"`
}

func (x *Viewer_Spice) Reset() {
	*x = Viewer_Spice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_controller_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Viewer_Spice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Viewer_Spice) ProtoMessage() {}

func (x *Viewer_Spice) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_controller_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Viewer_Spice.ProtoReflect.Descriptor instead.
func (*Viewer_Spice) Descriptor() ([]byte, []int) {
	return file_pkg_proto_controller_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Viewer_Spice) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *Viewer_Spice) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Viewer_Spice) GetTlsPort() int32 {
	if x != nil {
		return x.TlsPort
	}
	return 0
}

type Viewer_Vnc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pwd           string `protobuf:"bytes,1,opt,name=pwd,proto3" json:"pwd,omitempty"`
	Port          int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	WebsocketPort int32  `protobuf:"varint,3,opt,name=websocket_port,json=websocketPort,proto3" json:"websocket_port,omitempty"`
}

func (x *Viewer_Vnc) Reset() {
	*x = Viewer_Vnc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_controller_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Viewer_Vnc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Viewer_Vnc) ProtoMessage() {}

func (x *Viewer_Vnc) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_controller_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Viewer_Vnc.ProtoReflect.Descriptor instead.
func (*Viewer_Vnc) Descriptor() ([]byte, []int) {
	return file_pkg_proto_controller_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Viewer_Vnc) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *Viewer_Vnc) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Viewer_Vnc) GetWebsocketPort() int32 {
	if x != nil {
		return x.WebsocketPort
	}
	return 0
}

var File_pkg_proto_controller_proto protoreflect.FileDescriptor

var file_pkg_proto_controller_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x01, 0x0a, 0x06, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x12, 0x29,
	0x0a, 0x05, 0x73, 0x70, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x2e, 0x53, 0x70, 0x69,
	0x63, 0x65, 0x52, 0x05, 0x73, 0x70, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x03, 0x76, 0x6e, 0x63,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x65, 0x72, 0x2e, 0x56, 0x6e, 0x63, 0x52, 0x03, 0x76, 0x6e, 0x63, 0x1a, 0x48,
	0x0a, 0x05, 0x53, 0x70, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x77, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x77, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6c, 0x73, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x74, 0x6c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x1a, 0x52, 0x0a, 0x03, 0x56, 0x6e, 0x63, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x77, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x77,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x77,
	0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x14, 0x0a, 0x12,
	0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x73,
	0x6b, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x3d, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x76, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x52, 0x06, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x22,
	0x24, 0x0a, 0x12, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70,
	0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x0a, 0x10,
	0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x3a, 0x0a, 0x11, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x52, 0x06, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x32, 0xa9, 0x02, 0x0a,
	0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x0b, 0x44,
	0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x73, 0x6b, 0x74, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0c, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x6b,
	0x74, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x0b, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x6f,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x09, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x73, 0x61, 0x72, 0x64, 0x2d, 0x76, 0x64, 0x69,
	0x2f, 0x69, 0x73, 0x61, 0x72, 0x64, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pkg_proto_controller_proto_rawDescOnce sync.Once
	file_pkg_proto_controller_proto_rawDescData = file_pkg_proto_controller_proto_rawDesc
)

func file_pkg_proto_controller_proto_rawDescGZIP() []byte {
	file_pkg_proto_controller_proto_rawDescOnce.Do(func() {
		file_pkg_proto_controller_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_controller_proto_rawDescData)
	})
	return file_pkg_proto_controller_proto_rawDescData
}

var file_pkg_proto_controller_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_pkg_proto_controller_proto_goTypes = []interface{}{
	(*Viewer)(nil),               // 0: proto.Viewer
	(*DesktopListRequest)(nil),   // 1: proto.DesktopListRequest
	(*DesktopListResponse)(nil),  // 2: proto.DesktopListResponse
	(*DesktopStartRequest)(nil),  // 3: proto.DesktopStartRequest
	(*DesktopStartResponse)(nil), // 4: proto.DesktopStartResponse
	(*DesktopStopRequest)(nil),   // 5: proto.DesktopStopRequest
	(*DesktopStopResponse)(nil),  // 6: proto.DesktopStopResponse
	(*ViewerGetRequest)(nil),     // 7: proto.ViewerGetRequest
	(*ViewerGetResponse)(nil),    // 8: proto.ViewerGetResponse
	(*Viewer_Spice)(nil),         // 9: proto.Viewer.Spice
	(*Viewer_Vnc)(nil),           // 10: proto.Viewer.Vnc
}
var file_pkg_proto_controller_proto_depIdxs = []int32{
	9,  // 0: proto.Viewer.spice:type_name -> proto.Viewer.Spice
	10, // 1: proto.Viewer.vnc:type_name -> proto.Viewer.Vnc
	0,  // 2: proto.DesktopStartResponse.viewer:type_name -> proto.Viewer
	0,  // 3: proto.ViewerGetResponse.viewer:type_name -> proto.Viewer
	1,  // 4: proto.Controller.DesktopList:input_type -> proto.DesktopListRequest
	3,  // 5: proto.Controller.DesktopStart:input_type -> proto.DesktopStartRequest
	5,  // 6: proto.Controller.DesktopStop:input_type -> proto.DesktopStopRequest
	7,  // 7: proto.Controller.ViewerGet:input_type -> proto.ViewerGetRequest
	2,  // 8: proto.Controller.DesktopList:output_type -> proto.DesktopListResponse
	4,  // 9: proto.Controller.DesktopStart:output_type -> proto.DesktopStartResponse
	6,  // 10: proto.Controller.DesktopStop:output_type -> proto.DesktopStopResponse
	8,  // 11: proto.Controller.ViewerGet:output_type -> proto.ViewerGetResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_proto_controller_proto_init() }
func file_pkg_proto_controller_proto_init() {
	if File_pkg_proto_controller_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_proto_controller_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Viewer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_controller_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DesktopListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_controller_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DesktopListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_controller_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DesktopStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_controller_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DesktopStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_controller_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DesktopStopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_controller_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DesktopStopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_controller_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewerGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_controller_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewerGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_controller_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Viewer_Spice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_controller_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Viewer_Vnc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_controller_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_controller_proto_goTypes,
		DependencyIndexes: file_pkg_proto_controller_proto_depIdxs,
		MessageInfos:      file_pkg_proto_controller_proto_msgTypes,
	}.Build()
	File_pkg_proto_controller_proto = out.File
	file_pkg_proto_controller_proto_rawDesc = nil
	file_pkg_proto_controller_proto_goTypes = nil
	file_pkg_proto_controller_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ControllerClient is the client API for Controller service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControllerClient interface {
	DesktopList(ctx context.Context, in *DesktopListRequest, opts ...grpc.CallOption) (*DesktopListResponse, error)
	DesktopStart(ctx context.Context, in *DesktopStartRequest, opts ...grpc.CallOption) (*DesktopStartResponse, error)
	DesktopStop(ctx context.Context, in *DesktopStopRequest, opts ...grpc.CallOption) (*DesktopStopResponse, error)
	ViewerGet(ctx context.Context, in *ViewerGetRequest, opts ...grpc.CallOption) (*ViewerGetResponse, error)
}

type controllerClient struct {
	cc grpc.ClientConnInterface
}

func NewControllerClient(cc grpc.ClientConnInterface) ControllerClient {
	return &controllerClient{cc}
}

func (c *controllerClient) DesktopList(ctx context.Context, in *DesktopListRequest, opts ...grpc.CallOption) (*DesktopListResponse, error) {
	out := new(DesktopListResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/DesktopList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) DesktopStart(ctx context.Context, in *DesktopStartRequest, opts ...grpc.CallOption) (*DesktopStartResponse, error) {
	out := new(DesktopStartResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/DesktopStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) DesktopStop(ctx context.Context, in *DesktopStopRequest, opts ...grpc.CallOption) (*DesktopStopResponse, error) {
	out := new(DesktopStopResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/DesktopStop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) ViewerGet(ctx context.Context, in *ViewerGetRequest, opts ...grpc.CallOption) (*ViewerGetResponse, error) {
	out := new(ViewerGetResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/ViewerGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControllerServer is the server API for Controller service.
type ControllerServer interface {
	DesktopList(context.Context, *DesktopListRequest) (*DesktopListResponse, error)
	DesktopStart(context.Context, *DesktopStartRequest) (*DesktopStartResponse, error)
	DesktopStop(context.Context, *DesktopStopRequest) (*DesktopStopResponse, error)
	ViewerGet(context.Context, *ViewerGetRequest) (*ViewerGetResponse, error)
}

// UnimplementedControllerServer can be embedded to have forward compatible implementations.
type UnimplementedControllerServer struct {
}

func (*UnimplementedControllerServer) DesktopList(context.Context, *DesktopListRequest) (*DesktopListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DesktopList not implemented")
}
func (*UnimplementedControllerServer) DesktopStart(context.Context, *DesktopStartRequest) (*DesktopStartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DesktopStart not implemented")
}
func (*UnimplementedControllerServer) DesktopStop(context.Context, *DesktopStopRequest) (*DesktopStopResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DesktopStop not implemented")
}
func (*UnimplementedControllerServer) ViewerGet(context.Context, *ViewerGetRequest) (*ViewerGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ViewerGet not implemented")
}

func RegisterControllerServer(s *grpc.Server, srv ControllerServer) {
	s.RegisterService(&_Controller_serviceDesc, srv)
}

func _Controller_DesktopList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DesktopListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).DesktopList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/DesktopList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).DesktopList(ctx, req.(*DesktopListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_DesktopStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DesktopStartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).DesktopStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/DesktopStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).DesktopStart(ctx, req.(*DesktopStartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_DesktopStop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DesktopStopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).DesktopStop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/DesktopStop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).DesktopStop(ctx, req.(*DesktopStopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_ViewerGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ViewerGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).ViewerGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/ViewerGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).ViewerGet(ctx, req.(*ViewerGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Controller_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Controller",
	HandlerType: (*ControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DesktopList",
			Handler:    _Controller_DesktopList_Handler,
		},
		{
			MethodName: "DesktopStart",
			Handler:    _Controller_DesktopStart_Handler,
		},
		{
			MethodName: "DesktopStop",
			Handler:    _Controller_DesktopStop_Handler,
		},
		{
			MethodName: "ViewerGet",
			Handler:    _Controller_ViewerGet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/proto/controller.proto",
}
